name: ci

on:
  push:
    branches:
      - "main"  

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
    
      - name: Set short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - name: Check SHA value
        run: echo ${{ steps.vars.outputs.sha_short }}
    
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "nuitrcs/bob-the-builder"

      - name: Evaluate which Dockerfiles have changed
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            cellprofiler:
              - 'cellprofiler/Dockerfile'
            projectchrono:
              - 'projectchrono/Dockerfile'
            mcribs:
              - 'M-CRIB-S/Dockerfile'

      - name: Build and push cellprofiler
        if: steps.changes.outputs.cellprofiler == 'true'
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:cellprofiler"
          tags: nuitrcs/cellprofiler:${{ steps.vars.outputs.sha_short }}
          # For pull requests, export results to the build cache.
          # Otherwise, push to a registry.
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}

      - name: Build and push project chrono
        if: steps.changes.outputs.projectchrono == 'true'
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:projectchrono"
          tags: nuitrcs/projectchrono:${{ steps.vars.outputs.sha_short }}
          # For pull requests, export results to the build cache.
          # Otherwise, push to a registry.
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}
          
      - name: Build and push M-CRIB-S
        if: steps.changes.outputs.mcribs == 'true'
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:M-CRIB-S"
          tags: nuitrcs/m-crib-s:${{ steps.vars.outputs.sha_short }}
          # For pull requests, export results to the build cache.
          # Otherwise, push to a registry.
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}
